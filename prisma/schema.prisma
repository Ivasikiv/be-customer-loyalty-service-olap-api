generator client {
  provider = "prisma-client-js"
}

generator prisma_nestjs_graphql {
  provider = "prisma-nestjs-graphql"
  output   = "../src/@generated/prisma-nestjs-graphql"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model DimAssortmentSegment {
  AssortmentSegmentID   Int                   @id @unique
  AssortmentSegmentType String                @db.VarChar(50)
  Points                Int
  
  FactTransactionItem   FactTransactionItem[]
}

model DimLoyaltyCard {
  LoyaltyCardID        Int                    @id @unique
  CardType             String                 @db.VarChar(50)
  DiscountPercentage   Decimal                @db.Decimal(5, 2)
  CardNumber           String                 @db.VarChar(20)                 
  
  FactTransactionCheck FactTransactionCheck[]
}

model DimDate {
  DateID               Int                    @id @unique
  FullDate             String                 @db.VarChar(16)
  DayOfWeek            Int
  WeekNumber           Int
  CalendarMonth        Int
  CalendarQuarter      Int
  CalendarYear         Int
  
  FactTransactionCheck FactTransactionCheck[]
  FactTransactionItem  FactTransactionItem[]
}

model DimSeller {
  SellerID             Int                    @id @unique
  FirstName            String                 @db.VarChar(50)
  LastName             String                 @db.VarChar(50)
  
  FactTransactionCheck FactTransactionCheck[]
  FactTransactionItem  FactTransactionItem[]
}

model DimLocation {
  LocationID           Int                    @id @unique
  PartnerName          String                 @db.VarChar(100)
  LocationName         String                 @db.VarChar(100)
  Address              String                 @db.VarChar(255)
  City                 String                 @db.VarChar(100)
  State                String?                @db.VarChar(100)
  ZipCode              String?                @db.VarChar(20)
  Country              String                 @db.VarChar(100)
  Latitude             Float
  Longitude            Float
  
  FactTransactionCheck FactTransactionCheck[]
  FactTransactionItem  FactTransactionItem[]
}

model DimLoyaltyUser {
  LoyaltyUserID        Int                    @id @unique
  FirstName            String                 @db.VarChar(50)
  LastName             String                 @db.VarChar(50)
  Age                  Int
  
  FactTransactionCheck FactTransactionCheck[]
  FactTransactionItem  FactTransactionItem[]
}

model DimPromoCampaign {
  PromoCampaignID      Int                    @id @unique
  PromoCampaignName    String                 @db.VarChar(100)
  Description          String
  StartDate            DateTime               @db.Timestamp(6)
  EndDate              DateTime?              @db.Timestamp(6)
  
  FactTransactionItem  FactTransactionItem[]
}     

model DimTime {
  TimeID               Int                    @id @unique
  FullTime             String                 @db.VarChar(16)
  HourOfDay            Int
  MinuteOfHour         Int
  AMorPM               Int?
  
  FactTransactionCheck FactTransactionCheck[]
  FactTransactionItem  FactTransactionItem[]
}

model FactTransactionCheck {
  TransactionCheckID    Int               @id @unique
  DateID                Int
  TimeID                Int
  LoyaltyCardID         Int
  SellerID              Int
  LoyaltyUserID         Int
  LocationID            Int
  PaymentMethod         String            @db.VarChar(50)
  TimeFromLastCardUsage Int?
  PointsAccumulated     Int?
  PointsWithdraw        Int?
  TotalPrice            Float             
  
  CreateDate            DateTime          @default(now()) @db.Timestamp(6)
  UpdateDate            DateTime?         @db.Timestamp(6)
  
  DimLoyaltyCard        DimLoyaltyCard?    @relation(fields: [LoyaltyCardID], references: [LoyaltyCardID], onDelete: NoAction, onUpdate: NoAction)
  DimDate               DimDate?           @relation(fields: [DateID], references: [DateID], onDelete: NoAction, onUpdate: NoAction)
  DimSeller             DimSeller?         @relation(fields: [SellerID], references: [SellerID], onDelete: NoAction, onUpdate: NoAction)
  DimLocation           DimLocation?       @relation(fields: [LocationID], references: [LocationID], onDelete: NoAction, onUpdate: NoAction)
  DimLoyaltyUser        DimLoyaltyUser?    @relation(fields: [LoyaltyUserID], references: [LoyaltyUserID], onDelete: NoAction, onUpdate: NoAction)
  DimTime               DimTime?           @relation(fields: [TimeID], references: [TimeID], onDelete: NoAction, onUpdate: NoAction)
}

model FactTransactionItem {
  TransactionItemID    Int                  @id @unique
  DateID               Int
  TimeID               Int
  AssortmentSegmentID  Int
  PromoCampaignID      Int?
  SellerID             Int
  LoyaltyUserID        Int
  LocationID           Int
  ItemName             String?              @db.VarChar(50)
  QuantitySold         Int?
  Price                Float
  TotalPoints          Int?
  
  CreateDate           DateTime             @default(now()) @db.Timestamp(6)
  UpdateDate           DateTime?            @db.Timestamp(6)
  
  DimAssortmentSegment DimAssortmentSegment? @relation(fields: [AssortmentSegmentID], references: [AssortmentSegmentID], onDelete: NoAction, onUpdate: NoAction)
  DimDate              DimDate?              @relation(fields: [DateID], references: [DateID], onDelete: NoAction, onUpdate: NoAction)
  DimSeller            DimSeller?            @relation(fields: [SellerID], references: [SellerID], onDelete: NoAction, onUpdate: NoAction)
  DimLocation          DimLocation?          @relation(fields: [LocationID], references: [LocationID], onDelete: NoAction, onUpdate: NoAction)
  DimLoyaltyUser       DimLoyaltyUser?       @relation(fields: [LoyaltyUserID], references: [LoyaltyUserID], onDelete: NoAction, onUpdate: NoAction)
  DimTime              DimTime?              @relation(fields: [TimeID], references: [TimeID], onDelete: NoAction, onUpdate: NoAction)
  DimPromoCampaign     DimPromoCampaign?    @relation(fields: [PromoCampaignID], references: [PromoCampaignID], onDelete: NoAction, onUpdate: NoAction)
}
